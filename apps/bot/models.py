from solo.models import SingletonModel

from django.db import models

__all__ = ["BotMainConfig", "BotTextsConfig"]


class BotMainConfig(SingletonModel):
    channel_name = models.CharField(
        "–ò–º—è –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã", max_length=64, default="", help_text="–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–µ–∑–¥–æ–∫. –ë–µ–∑ @"
    )
    max_ads_count_per_day = models.PositiveSmallIntegerField("–ú–∞–∫—Å –∫–æ–ª-–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –¥–µ–Ω—å", default=3)

    def __str__(self):
        return "–ö–æ–Ω—Ñ–∏–≥ –±–æ—Ç–∞"

    class Meta:
        verbose_name = "–ö–æ–Ω—Ñ–∏–≥ –±–æ—Ç–∞"


class BotTextsConfig(SingletonModel):
    text_trip = models.TextField("–¢–µ–∫—Å—Ç –ø–æ–µ–∑–¥–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ", default="")
    publish_count_exceed = models.TextField("–¢–µ–∫—Å—Ç –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª-–≤–æ –≤ –¥–µ–Ω—å", default="")
    new_trip_before_start = models.TextField("–î–æ–±–∞–≤—å—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", default="–î–æ–±–∞–≤—å—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ")
    new_trip_select_city_from = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑", default="–í—ã–±—å–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑")
    new_trip_select_city_to = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤", default="–í—ã–±—å–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤")
    new_trip_select_date = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏", default="–í—ã–±—å–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏")
    new_trip_select_hour = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ —á–∞—Å –ø–æ–µ–∑–¥–∫–∏", default="–í—ã–±—å–µ—Ä–∏—Ç–µ —á–∞—Å –ø–æ–µ–∑–¥–∫–∏")
    new_trip_select_minutes = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ –º–∏–Ω—É—Ç—ã –ø–æ–µ–∑–¥–∫–∏", default="–í—ã–±—å–µ—Ä–∏—Ç–µ –º–∏–Ω—É—Ç—ã –ø–æ–µ–∑–¥–∫–∏")
    new_trip_select_pass_count = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤", default="–í—ã–±—å–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤")
    new_trip_select_payment = models.TextField("–í—ã–±—å–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã", default="–í—ã–±—å–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã")
    new_trip_confirm = models.TextField("–í—Å–µ –≤–µ—Ä–Ω–æ?", default="–í—Å–µ –≤–µ—Ä–Ω–æ –ø–æ –Ω–æ–≤–æ–π –ø–æ–µ–∑–¥–∫–µ?")
    new_trip_confirm_yes = models.TextField("–î–∞ (–ø—É–±–ª–∏–∫—É–µ–º)", default="–î–∞ (–ø—É–±–ª–∏–∫—É–µ–º)")
    new_trip_confirm_no = models.TextField("–ù–µ—Ç (–ø–µ—Ä–µ–∑–∞–ø–æ–ª–Ω–∏—Ç—å)", default="–ù–µ—Ç (–ø–µ—Ä–µ–∑–∞–ø–æ–ª–Ω–∏—Ç—å)")
    new_trip_confirmed = models.TextField("–í—ã —Å–æ–∑–¥–∞–ª–∏ –ø–æ–µ–∑–¥–∫—É", default="–í—ã —Å–æ–∑–¥–∞–ª–∏ –ø–æ–µ–∑–¥–∫—É")
    new_trip_city_not_found = models.TextField("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω", default="–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    trip_not_found = models.TextField("–ü–æ–µ–∑–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", default="–ü–æ–µ–∑–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    common_start = models.TextField("–ü—Ä–∏–≤–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —é–∑–µ—Ä", default="–ü—Ä–∏–≤–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —é–∑–µ—Ä")
    common_for_new_user_text = models.TextField("–ü—Ä–∏–≤–µ—Ç –Ω–æ–≤—ã–π —é–∑–µ—Ä", default="–ü—Ä–∏–≤–µ—Ç –Ω–æ–≤—ã–π —é–∑–µ—Ä")
    trip_list_one = models.TextField("–û–¥–Ω–æ –æ–±—Ö—è–≤–ª–µ–Ω–∏–µ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ", default="–û–¥–Ω–æ –æ–±—Ö—è–≤–ª–µ–Ω–∏–µ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ")

    find_trip_before_start = models.TextField("–ù–∞–π–¥–∏—Ç–µ –ø–æ–µ–∑–¥–∫–∏", default="–ù–∞–π–¥–∏—Ç–µ –ø–æ–µ–∑–¥–∫–∏")
    find_trip_results = models.TextField("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞", default="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞")
    find_trip_no_results = models.TextField("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ (–Ω–µ –Ω–∞–π–¥–µ–Ω–æ)", default="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    common_help_text = models.TextField("–¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏", default="–¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏")

    command_start_text = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–∞–¥—ã /start", default="–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã")
    command_new_text = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–∞–¥—ã /new", default="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
    command_find_text = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–∞–¥—ã /find", default="–ù–∞–π—Ç–∏ –ø–æ–µ–∑–¥–∫—É")
    command_my_text = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–∞–¥—ã /my", default="–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    command_help_text = models.TextField("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–∞–¥—ã /help", default="–ü–æ–º–æ—â—å")

    button_main_menu = models.CharField("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", max_length=128, default="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    button_find_trip = models.CharField("–ù–∞–π—Ç–∏ –º–∞—à–∏–Ω—É", max_length=128, default="–ù–∞–π—Ç–∏ –º–∞—à–∏–Ω—É")
    button_new_trip = models.CharField("–°–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", max_length=128, default="–°–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É")
    button_my_trips = models.CharField("–ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏", max_length=128, default="–ú–æ–∏ –ø–æ–µ–∑–¥–∫–∏")
    button_help = models.CharField("–ü–æ–º–æ—â—å", max_length=128, default="–ü–æ–º–æ—â—å")
    button_fully = models.CharField("üôÖ‚Äç –ü–æ–ª–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞", max_length=128, default="üôÖ‚Äç –ü–æ–ª–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞")
    button_cancel = models.CharField("‚õî –û—Ç–º–µ–Ω–∏—Ç—å", max_length=128, default="‚õî –û—Ç–º–µ–Ω–∏—Ç—å")
    button_actual = models.CharField("üü¢ –ê–∫—Ç—É–∞–ª—å–Ω–æ", max_length=128, default="üü¢ –ê–∫—Ç—É–∞–ª—å–Ω–æ")
    button_payment_free = models.CharField("üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ", max_length=128, default="üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ")
    button_payment_pay = models.CharField("üí∂ –ü–ª–∞—Ç–Ω–æ", max_length=128, default="üí∂ –ü–ª–∞—Ç–Ω–æ")
    button_payment_petrol = models.CharField("‚õΩÔ∏è –û–ø–ª–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã", max_length=128, default="‚õΩÔ∏è –û–ø–ª–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã")

    def __str__(self):
        return "–¢–µ–∫—Å—Ç—ã –±–æ—Ç–∞"

    class Meta:
        verbose_name = "–¢–µ–∫—Å—Ç—ã –±–æ—Ç–∞"
